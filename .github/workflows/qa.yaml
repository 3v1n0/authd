name: QA & sanity checks
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

env:
  apt_deps: >-
    libpam0g-dev
  # In Rust the grpc stubs are generated at build time
  # so we always need to install the protobuf compilers
  # when building the NSS crate.
  protobuf_compilers: >-
    protobuf-compiler

jobs:
  go-sanity:
    name: "Go: Code sanity"
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y ${{ env.apt_deps }}
      - uses: actions/checkout@v4
      - name: Go code sanity check
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@main
        with:
          golangci-lint-configfile: ".golangci.yaml"
          tools-directory: "tools"
      - name: Build cmd/authd with withexamplebroker tag
        run: |
          set -eu
          go build -tags withexamplebroker ./cmd/authd

  rust-sanity:
    name: "Rust: Code sanity"
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y ${{ env.apt_deps }} ${{ env.protobuf_compilers}}
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Build crate
        uses: actions-rs/cargo@v1
        with:
          command: build
          args:  --all-features
      - name: Check code format with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
      - name: Check code format with clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  go-tests:
    name: "Go: Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update

          # The integration tests build the NSS crate, so we need the cargo build dependencies in order to run them.
          sudo DEBIAN_FRONTEND=noninteractive apt install -y ${{ env.apt_deps }} ${{ env.protobuf_compilers}}
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly # We need nightly to enable instrumentation for coverage.
          override: true
          components: llvm-tools-preview
      - name: Install grcov
        run: |
          set -eu
          cargo install grcov
      - name: Run tests
        run: |
          set -eu

          go test -coverpkg=./... -coverprofile=/tmp/coverage.out -covermode=set ./... -shuffle=on
      - name: Run tests (with race detector)
        run: |
          go test -race ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: /tmp/coverage.combined

  # TODO: rust-tests:
